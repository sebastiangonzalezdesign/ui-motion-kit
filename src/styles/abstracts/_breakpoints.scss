// PRO: Enhanced Responsive System
// ==============================================
@use 'sass:map';

// Granular breakpoint scale
$breakpoints: (
  'xs': 375px,
  // Small phones
  'sm': 576px,
  // Large phones
  'md': 768px,
  // Tablets
  'lg': 1024px,
  // Small desktops
  'xl': 1280px,
  // Large desktops
  '2xl': 1536px, // Extra large screens
);

// Legacy support (keeping existing variables)
$breakpoint-sm: map.get($breakpoints, 'sm');
$breakpoint-md: map.get($breakpoints, 'md');
$breakpoint-lg: map.get($breakpoints, 'lg');

// Enhanced responsive mixin with all breakpoints
@mixin respond($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found in $breakpoints.";
  }
}

// Responsive range mixins
@mixin respond-between($min, $max) {
  @if map.has-key($breakpoints, $min) and map.has-key($breakpoints, $max) {
    @media (min-width: map.get($breakpoints, $min)) and (max-width: #{map.get($breakpoints, $max) - 1px}) {
      @content;
    }
  } @else {
    @warn "Breakpoints '#{$min}' or '#{$max}' not found.";
  }
}

@mixin respond-down($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map.get($breakpoints, $breakpoint) - 1px}) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$breakpoint}' not found.";
  }
}

// Specific device mixins
@mixin mobile-only {
  @include respond-down('md');
}

@mixin tablet-only {
  @include respond-between('md', 'lg');
}

@mixin desktop-only {
  @include respond('lg');
}

// Legacy tablet mixin (keeping for compatibility)
@mixin respond-tablet {
  @include respond-between('md', 'lg');
}

// Breakpoint-down mixin for max-width queries
@mixin breakpoint-down($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map.get($breakpoints, $breakpoint) - 1px}) {
      @content;
    }
  } @else {
    @warn 'Unknown breakpoint: #{$breakpoint}';
  }
}

// Alias for breakpoint-down
@mixin respond-below($breakpoint) {
  @include breakpoint-down($breakpoint) {
    @content;
  }
}

// Container query support (for modern browsers)
@mixin container($size) {
  @container (min-width: #{$size}) {
    @content;
  }
}

// Print media mixin
@mixin print {
  @media print {
    @content;
  }
}

// High-density display mixin
@mixin retina {
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    @content;
  }
}
