@use 'sass:map';
@use 'colors' as colors;
@use 'tokens' as *;

// PRO: Comprehensive Typography System
// ==============================================

// Font stacks - now imported from tokens for centralization
$font-stack-ui: var(--font-family-ui);
$font-stack-code: var(--font-family-code);
$font-stack-display: var(--font-family-ui);

// Typography scale with responsive sizing
$typography-scale: (
  // Display styles (hero text)
  'display-xxl': (
      'font-size': clamp(3.5rem, 5vw, 4.5rem),
      'line-height': 1.1,
      'font-weight': 800,
      'letter-spacing': -0.02em,
      'font-family': $font-stack-display,
    ),
  'display-xl': (
    'font-size': clamp(2.5rem, 4vw, 3.5rem),
    'line-height': 1.2,
    'font-weight': 700,
    'letter-spacing': -0.02em,
    'font-family': $font-stack-display,
  ),
  'display-lg': (
    'font-size': clamp(2rem, 3vw, 3rem),
    'line-height': 1.2,
    'font-weight': 700,
    'letter-spacing': -0.01em,
    'font-family': $font-stack-display,
  ),

  // Heading styles - consistent naming
  'heading-xl': (
      'font-size': clamp(1.875rem, 3vw, 2.25rem),
      'line-height': 1.3,
      'font-weight': 600,
      'letter-spacing': -0.01em,
      'font-family': $font-stack-ui,
    ),
  'heading-lg': (
    'font-size': clamp(1.5rem, 2.5vw, 1.875rem),
    'line-height': 1.4,
    'font-weight': 600,
    'letter-spacing': -0.005em,
    'font-family': $font-stack-ui,
  ),
  'heading-md': (
    'font-size': clamp(1.25rem, 2vw, 1.5rem),
    'line-height': 1.4,
    'font-weight': 600,
    'font-family': $font-stack-ui,
  ),
  'heading-sm': (
    'font-size': clamp(1.125rem, 1.5vw, 1.25rem),
    'line-height': 1.5,
    'font-weight': 600,
    'font-family': $font-stack-ui,
  ),

  // Body styles - consistent naming
  'body-xl': (
      'font-size': var(--font-size-xl),
      'line-height': 1.6,
      'font-weight': var(--font-weight-normal),
      'font-family': $font-stack-ui,
    ),
  'body-lg': (
    'font-size': var(--font-size-lg),
    'line-height': 1.6,
    'font-weight': var(--font-weight-normal),
    'font-family': $font-stack-ui,
  ),
  'body-md': (
    'font-size': var(--font-size-base),
    'line-height': 1.5,
    'font-weight': var(--font-weight-normal),
    'font-family': $font-stack-ui,
  ),
  'body-sm': (
    'font-size': var(--font-size-sm),
    'line-height': 1.5,
    'font-weight': var(--font-weight-normal),
    'font-family': $font-stack-ui,
  ),

  // Specialized styles
  'caption': (
      'font-size': var(--font-size-sm),
      'line-height': 1.4,
      'font-weight': var(--font-weight-medium),
      'color': var(--text-secondary),
      // Theme-aware
      'font-family': $font-stack-ui,
    ),
  'overline': (
    'font-size': var(--font-size-xs),
    'line-height': 1.2,
    'font-weight': var(--font-weight-semibold),
    'text-transform': uppercase,
    'letter-spacing': 0.1em,
    'font-family': $font-stack-ui,
  ),
  'code': (
    'font-family': $font-stack-code,
    'font-size': var(--font-size-sm),
    'line-height': 1.4,
    'font-weight': var(--font-weight-medium),
  )
);

// Typography utility mixin
@mixin typography($style) {
  @if map.has-key($typography-scale, $style) {
    $properties: map.get($typography-scale, $style);

    @each $property, $value in $properties {
      #{$property}: $value;
    }
  } @else {
    @warn "Typography style '#{$style}' not found in $typography-scale.";
  }
}

// Auto-generate typography utility classes
// This creates classes like .text-heading-lg, .text-body-md, etc.
@each $style, $properties in $typography-scale {
  .text-#{$style} {
    @include typography($style);
  }
}

// Semantic text color tokens - all theme-aware
$text-primary: var(--text-primary);
$text-secondary: var(--text-secondary);
$text-tertiary: var(--text-tertiary);
$text-inverse: var(--text-inverse);
$text-disabled: var(--text-disabled);
$text-brand: var(--accent-primary);
$text-success: var(--feedback-success);
$text-warning: var(--feedback-warning);
$text-error: var(--feedback-error);

// Legacy aliases - DEPRECATED
// These are kept for backward compatibility but should be migrated
$text-primary-dark: var(--text-primary);
$text-secondary-dark: var(--text-secondary);
$text-tertiary-dark: var(--text-tertiary);
$text-inverse-dark: var(--text-inverse);
