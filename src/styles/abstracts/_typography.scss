@use 'sass:map';
@use 'colors' as colors;
@use 'tokens' as *;

// PRO: Comprehensive Typography System
// ==============================================

// Font stacks
$font-stack-ui: $font-family-ui;
$font-stack-code: $font-family-code;
$font-stack-display: 'Inter', system-ui, sans-serif;

// Typography scale with responsive sizing
$typography-scale: (
  // Display styles (hero text)
  'display-2xl': (
      'font-size': clamp(3.5rem, 5vw, 4.5rem),
      'line-height': 1.1,
      'font-weight': 800,
      'letter-spacing': -0.02em,
    ),
  'display-xl': (
    'font-size': clamp(2.5rem, 4vw, 3.5rem),
    'line-height': 1.2,
    'font-weight': 700,
    'letter-spacing': -0.02em,
  ),
  'display-lg': (
    'font-size': clamp(2rem, 3vw, 3rem),
    'line-height': 1.2,
    'font-weight': 700,
    'letter-spacing': -0.01em,
  ),

  // Heading styles
  'heading-xl': (
      'font-size': clamp(1.875rem, 3vw, 2.25rem),
      'line-height': 1.3,
      'font-weight': 600,
      'letter-spacing': -0.01em,
    ),
  'heading-lg': (
    'font-size': clamp(1.5rem, 2.5vw, 1.875rem),
    'line-height': 1.4,
    'font-weight': 600,
    'letter-spacing': -0.005em,
  ),
  'heading-md': (
    'font-size': clamp(1.25rem, 2vw, 1.5rem),
    'line-height': 1.4,
    'font-weight': 600,
  ),
  'heading-sm': (
    'font-size': clamp(1.125rem, 1.5vw, 1.25rem),
    'line-height': 1.5,
    'font-weight': 600,
  ),

  // Body styles
  'body-xl': (
      'font-size': 1.25rem,
      'line-height': 1.6,
      'font-weight': 400,
    ),
  'body-lg': (
    'font-size': 1.125rem,
    'line-height': 1.6,
    'font-weight': 400,
  ),
  'body-md': (
    'font-size': 1rem,
    'line-height': 1.5,
    'font-weight': 400,
  ),
  'body-sm': (
    'font-size': 0.875rem,
    'line-height': 1.5,
    'font-weight': 400,
  ),

  // Specialized styles
  'caption': (
      'font-size': 0.875rem,
      'line-height': 1.4,
      'font-weight': 500,
      'color': $text-secondary,
    ),
  'overline': (
    'font-size': 0.75rem,
    'line-height': 1.2,
    'font-weight': 600,
    'text-transform': uppercase,
    'letter-spacing': 0.1em,
  ),
  'code': (
    'font-family': $font-stack-code,
    'font-size': 0.875rem,
    'line-height': 1.4,
    'font-weight': 500,
  )
);

// Typography utility mixin
@mixin typography($style) {
  @if map.has-key($typography-scale, $style) {
    $properties: map.get($typography-scale, $style);

    @each $property, $value in $properties {
      #{$property}: $value;
    }
  } @else {
    @warn "Typography style '#{$style}' not found in $typography-scale.";
  }
}

// Semantic text color tokens (use semantic tokens from tokens file)
$text-primary: $text-primary;
$text-secondary: $text-secondary;
$text-tertiary: $text-tertiary;
$text-inverse: $text-inverse;
$text-brand: $accent-primary;
$text-success: $success;
$text-warning: $warning;
$text-error: $error;

// Dark mode text colors (these are handled by CSS custom properties now)
// These are kept for backward compatibility but should use semantic tokens
$text-primary-dark: map.get(colors.$gray, 50);
$text-secondary-dark: map.get(colors.$gray, 300);
$text-tertiary-dark: map.get(colors.$gray, 400);
$text-inverse-dark: map.get(colors.$gray, 900);
